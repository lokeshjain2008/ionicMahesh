{
  "rules": {
    "menu": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'father'",
      "$id": {
        ".validate": "newData.hasChildren(['name', 'price', 'desc', 'available']) && newData.child('name').val() != null && newData.child('price').val() > 0 && newData.child('desc').val().length <= 140",
        "name": {
          ".validate": "newData.isString()"
        },
        "price": {
          ".validate": "newData.isNumber()"
        },
        "desc": {
          ".validate": "newData.isString()"
        },
        "available": {
          ".validate": "newData.isBoolean()"
        },
        "$other": {
          ".validate": "false"
        },
        ".indexOn": [
          "available"
        ]
      }
    },
    "users": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'father'",
      "$userId": {
        ".validate": "newData.hasChildren(['email', 'profileImageURL', 'displayName', 'userId'])",
        "email": {
          ".validate": "newData.isString()"
        },
        "profileImageURL": {
          ".validate": "newData.isString()"
        },
        "displayName": {
          ".validate": "newData.isString()"
        },
        "userId": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "auth != null && auth.uid == $userId",
        ".write": "auth != null && auth.uid == $userId"
      }
    },
    "canteen": {
      ".validate": "newData.hasChildren(['name', 'owner', 'accountNumber', 'desc'])",
      "name": {
        ".validate": "newData.isString()"
      },
      "owner": {
        ".validate": "newData.isString()"
      },
      "accountNumber": {
        ".validate": "newData.isNumber()"
      },
      "desc": {
        ".validate": "newData.isString()"
      },
      "$other": {
        ".validate": "false"
      },
      ".read": "true",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'father'"
    },
    "user-orders": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'father'",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'father'",
      "$userId": {
        ".validate": "newData.hasChildren()",
        "amount": {
          ".validate": "newData.isNumber() || newData.val() == null"
        },
        "orders": {
          "$key1": {
            ".validate": "newData.hasChildren(['amount', 'status'])",
            "items": {
              "$key2": {
                ".validate": "newData.hasChildren(['name', 'price', 'desc', 'available']) && newData.child('name').val() != null && newData.child('price').val() > 0 && newData.child('desc').val().length <= 140",
                "name": {
                  ".validate": "newData.isString()"
                },
                "price": {
                  ".validate": "newData.isNumber()"
                },
                "desc": {
                  ".validate": "newData.isString()"
                },
                "available": {
                  ".validate": "newData.isBoolean()"
                },
                "$other": {
                  ".validate": "false"
                }
              }
            },
            "amount": {
              ".validate": "newData.isNumber()"
            },
            "status": {
              ".validate": "newData.isNumber()"
            },
            "$other": {
              ".validate": "false"
            }
          }
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "data.val() == null && (auth != null && auth.uid == $userId) || data.val() != null && newData.val() != null && (auth != null && auth.uid == $userId) && data.child('status').val() != 2 || data.val() != null && newData.val() == null && (auth != null && auth.uid == $userId) && data.child('status').val() != 2",
        ".read": "auth != null && auth.uid == $userId"
      }
    },
    "tables": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'father'"
    },
    "reservations": {
      ".read": "auth != null",
      ".write": "auth != null && (auth.uid == newData.child('userId').val() || root.child('users').child(auth.uid).child('role').val() == 'father')"
    },
    "current-orders": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'father'",
      ".write": "auth != null"
    },
    "textItems": {
      ".read": "true"
    }
  }
}
